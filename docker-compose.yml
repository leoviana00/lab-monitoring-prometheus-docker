version: '3.8'

services:
  #-------------------------------------
  #  PROMETHEUS - ARMAZENAMENTO DAS METRICAS
  #-------------------------------------
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on: 
      - cadvisor
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=360h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/config:/etc/prometheus
      - prometheus_data:/prometheus
    labels:
      org.label-schema.group: "monitoring"

  #-------------------------------------
  #  GRAFANA - VISUALIZAÇÃO DAS METRICAS
  #-------------------------------------
  grafana:
      image: grafana/grafana
      ports:
        - "3000:3000"
      container_name: grafana
      env_file:
        - ./grafana/grafana.env
      volumes:
        - grafana_data:/var/lib/grafana
        - grafana_conf:/etc/grafana
        - grafana_logs:/var/logs/grafana
        - ./grafana/provisioning:/etc/grafana/provisioning
      depends_on:
        - prometheus
      labels:
        org.label-schema.group: "monitoring"

  #-------------------------------------
  #   ALERTMANAGER SERVER - GERENCIAMENTO DE ALERTAS
  #-------------------------------------
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    env_file:
      - ./alertmanager/telegram.env
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093
    labels:
      org.label-schema.group: "monitoring"

  #-------------------------------------
  #  CADVISOR - EXPORTAR METRICAS DOCKER
  #-------------------------------------
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    user: root
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    # depends_on:
    #   - redis
    labels:
      org.label-schema.group: "monitoring"
    
  #-------------------------------------
  #  NODEEXPORTER - EXPORTAR METRICAS DO HOST
  #-------------------------------------
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100:9100
    labels:
      org.label-schema.group: "monitoring"

  #-------------------------------------
  #           APLICAÇÃO TESTE
  #-------------------------------------
  app:
    build: .
    container_name: app
    restart: always
    tty: true
    ports:
    - 8081:80

  #-------------------------------------
  #            VOLUMES
  #-------------------------------------
volumes:
    prometheus_data: {}
    grafana_data: {}
    grafana_conf: {}
    grafana_logs: {}

